@use './vars';

.tasks-page,
.boards-page {
  padding: 0 !important;
  display: grid !important;
  align-items: flex-start !important;
  grid-template-columns: auto 1fr;
  row-gap: vars.$app-row-gap !important;

  .loading {
    position: fixed;
    inset: 50% auto auto 50%;
    transform: translate(-50%, -50%);
  }

  // ADD TASK BUTTON

  .add-task-link {
    grid-area: 1 / 1 / 2 / 2;
    width: 80px;
    position: sticky;
    top: vars.$app-padding;
    z-index: 3;

    a {
      margin: 0 auto;
      width: vars.$btn-size;
      height: vars.$btn-size;
      background: vars.$pink;
      box-shadow: vars.$lg-shadow;
      border-radius: 12px;
      display: flex;
      align-items: center;
      justify-content: center;

      .icon {
        color: #fff;
        font-size: 2.3em;
        text-align: center;
        pointer-events: none;
      }

      .title {
        padding: 4px 6px;
        background: #fff;
        border: 1px solid #aaa;
        border-radius: 4px;
        position: absolute;
        top: calc(100% - 10px);
        opacity: 0;
        transform: translateY(10px);
        cursor: pointer;
        pointer-events: none;
        transition: .2s;
      }
    }

    &:hover {
      a {
        .title {
          opacity: 1;
          transform: translateY(0);
        }
      }
    }
  }

  // PROGRESS BAR

  .progress-bar {
    grid-area: 2 / 1 / 3 / 2;
    margin: 0 auto;
    padding: 20px;
    width: 80px;
    height: calc(100vh - vars.$app-padding * 2 - vars.$btn-size - vars.$app-row-gap);
    box-shadow: vars.$lg-shadow;
    border-radius: 12px;
    display: flex;
    flex-direction: column;
    gap: 10px;
    position: sticky;
    top: calc(vars.$app-padding + vars.$btn-size + vars.$app-row-gap);
    z-index: 3;


    .percent {
      width: 40px;
      border-radius: 6px;
      display: flex;
      justify-content: center;
      position: relative;
      // transition: .2s;

      &.percent-to-do {
        background: vars.$to-do;
      }

      &.percent-in-progress {
        background: vars.$in-progress;
      }

      &.percent-done {
        background: vars.$done;
      }

      p {
        padding: 4px 8px;
        min-width: 60px;
        text-align: center;
        background: #fff;
        border: 1px solid #aaa;
        border-radius: 4px;
        color: #000;
        position: absolute;
        top: 10px;

        span {
          color: #000;
          font-family: 'Fira Mono';
          font-size: 14px;
        }
      }
    }
  }

  // JS FUNCTION CONTAINER

  .js-function {
    padding: 0 vars.$app-padding;
    grid-area: 1 / 2 / 2 / 3;
    height: vars.$btn-size;
    // width: calc(100% - vars.$app-padding * 2 - 60px);
    display: flex;
    align-items: center;
    justify-content: space-between;
    // justify-content: center;
    gap: 60px;
    // position: sticky;
    // top: vars.$app-padding;
    // z-index: 3;

    .search {
      min-width: 160px;
      display: flex;
      align-items: center;
      position: relative;

      .search-bar {
        background: rgba($color: #fff, $alpha: .4);
      }

      .icon-search {
        position: absolute;
        right: 10px;
      }
    }
  }

  // TASKS CONTAINER

  .tasks-container {
    grid-area: 2 / 2 / 3 / 3;
    margin: 0 0 100px;
    // width: 100%;
    // min-height: calc(100vh - vars.$app-padding * 2 - vars.$app-row-gap - vars.$btn-size);
    display: grid;
    gap: 20px;

    .status {
      padding: 20px;
      height: fit-content;
      box-shadow: vars.$lg-shadow;
      border-radius: 12px;
      position: relative;

      &.to-do {
        .task-status {
          background: vars.$to-do;
        }

        .grid {
          .task-content {

            &.open,
            &:hover {
              background: vars.$to-do;
              box-shadow: 0 0 0 4px vars.$to-do;
            }
          }
        }
      }

      &.in-progress {
        .task-status {
          background: vars.$in-progress;
        }

        .grid {
          .task-content {

            &.open,
            &:hover {
              background: vars.$in-progress;
              box-shadow: 0 0 0 4px vars.$in-progress;
            }
          }
        }
      }

      &.done {
        .task-status {
          background: vars.$done;
        }

        .grid {
          .task-content {

            &.open,
            &:hover {
              background: vars.$done;
              box-shadow: 0 0 0 4px vars.$done;
            }
          }
        }
      }

      .task-status {
        // color: #fff;
        margin: 0 20px;
        padding: 0 40px;
        width: fit-content;
        height: 40px;
        border-radius: 6px;
        display: flex;
        align-items: center;
      }

      .grid {
        width: 100%;
        margin: 20px 0 0;
        display: grid;
        grid-template-columns: 1fr;
        gap: 10px;

        .task-content {
          padding: 10px 16px;
          border-radius: 6px;
          display: flex;
          align-items: center;
          gap: 40px;
          position: relative;

          // & * {
          //   color: #fff;
          // }

          &.high-importance {
            background: vars.$high-importance;
          }

          &.medium-importance {
            background: vars.$medium-importance;
          }

          &.low-importance {
            background: vars.$low-importance;
          }

          .task-title {
            width: 100%;
            white-space: normal;
            transition: .2s;
          }

          .updated-at {
            font-size: 14px;
            position: relative;
            cursor: default;
          }

          // TASK DETAILS

          .details {
            padding: 40px;
            background: #fff;
            border-radius: 12px;
            display: flex;
            flex-direction: column;
            gap: 20px;
            position: fixed;
            inset: 50% auto auto 50%;
            transform: translate(-50%, 0);
            opacity: 0;
            z-index: 120;
            pointer-events: none;
            transition: .2s;

            &.open {
              transform: translate(-50%, -50%);
              opacity: 1;
              pointer-events: all;
            }

            * {
              white-space: normal;
            }

            .task-title {
              font-weight: 600 !important;
              transform: none !important;
            }

            .description {
              font-weight: 500;
            }

            .date {
              display: flex;
              flex-direction: column;
              gap: 10px;

              p {
                font-size: .9em;
                font-weight: 500;

                span {
                  font-weight: 400;
                }
              }
            }

          }

          .backdrop {
            background: rgba($color: #000, $alpha: .4);
            position: fixed;
            inset: 0;
            z-index: 110;
          }

          &.open,
          &:hover {
            .task-title {
              transform: translateX(30px);
            }

            .updated-at {
              opacity: 0;
            }
          }
        }
      }
    }
  }
}