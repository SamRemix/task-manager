@use '../../styles/vars' as v;
@use '../../styles/mixins' as mix;

.input {
  @include mix.flex-column;
  position: relative;

  &--error {
    @extend .input;

    input {
      border-color: v.$red-2 !important;

      &::placeholder {
        color: v.$red-2 !important;
      }
    }
  }

  >* {
    outline: 0;
  }

  >input,
  >textarea {
    width: 100%;
    min-width: 160px;
    // background: v.$light-2 !important;
    background: var(--input-background);
    // border: 1px solid rgba($color: #000, $alpha: .2);
    border: var(--input-border);
    border-radius: v.$radius-sm;
    color: var(--color);
    font-family: inherit;

    &::placeholder {
      // color: rgba($color: #000, $alpha: .4);
      color: var(--input-color);
    }

    &:focus {
      // border-color: v.$red-light-1;
      // border-color: v.$red;
      border-color: var(--primary);

      &+.search-icon,
      &+.eye-icon {
        // color: rgba($color: #000, $alpha: .6);
        color: var(--color);
        // border-color: v.$red-light-1;
        // border-color: v.$red;
        border-color: var(--primary);
        // border-left-color: rgba($color: #000, $alpha: .2);
      }

      // &::placeholder {
      //   border-color: var(--primary);
      // }
    }

    &+.search-icon,
    &+.eye-icon {
      @include mix.flex-center;
      padding: 0 10px;
      height: 100%;
      // background: v.$light;
      background: var(--input-background);
      // border: 1px solid rgba($color: #000, $alpha: .2);
      border: var(--input-border);
      border-radius: 0 v.$radius-sm v.$radius-sm 0;
      // color: rgba($color: #000, $alpha: .4);
      color: var(--input-color);
      position: absolute;
      inset: 0 0 auto auto;
    }

    &+.eye-icon {
      cursor: pointer;

      &--display {
        @extend .eye-icon;
        background: v.$red-light-1;
      }

      &:hover {
        // background: v.$red-light-1;
        color: var(--color);
      }
    }
  }

  >input {
    padding: .5rem 1rem;
  }

  >textarea {
    padding: 1rem;
    height: 200px;
    max-height: 300px;
    min-height: 100px;
    resize: vertical;
    line-height: 1.2rem;

    &::-webkit-scrollbar-track {
      margin: 0;
    }
  }

  >.remaining {
    margin: 1rem 0 0 1rem;
    color: #888;

    &-error {
      @extend .remaining;
    }
  }

  .radio,
  .checkbox {
    @include mix.flex-align-gap(1rem);
    padding: .5rem 1rem;
    // background: v.$light-2;
    background: var(--tips);
    // border: 1px solid rgba($color: #000, $alpha: .2);
    border: var(--task-border);
    border-radius: v.$radius-sm;
    justify-content: space-between;
    position: relative;
    white-space: nowrap;
    opacity: .6;

    &-checked {
      @extend .checkbox;
      position: relative;
      opacity: 1;

      &::after {
        content: '\2714';
      }
    }

    &::before,
    &::after {
      position: absolute;
      inset: .375rem auto auto .375rem;
    }

    &::before {
      content: '';
      width: 1.25rem;
      height: 1.25rem;
      border-radius: v.$radius-sm / 2;
      background: var(--task-low);
      // border: 1px solid rgba($color: #000, $alpha: .2);
      border: var(--input-border);
    }

    &::after {
      padding: .125rem .25rem;
      width: 1rem;
      height: 1rem;
      font-size: 1rem;
      text-align: center;
      // font-family: Checkbox;
    }

    input {
      visibility: hidden;
    }
  }
}